name: "Terraform"

on:
  - push
  - pull_request

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: GCP Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Get service account email
        id: service_account_email
        run: |
          EMAIL=$(gcloud config get-value account --format="value(core.account)")
          echo "email=$EMAIL" >> $GITHUB_OUTPUT

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: |
          terraform init \
            --backend-config="bucket=${{ secrets.GCP_BACKEND_BUCKET }}" \
            --backend-config="prefix=${{ secrets.GCP_BACKEND_PREFIX }}"

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan \
            -var='service_account_email=${{ steps.service_account_email.outputs.email }}' \
            -var='project=${{ secrets.GCP_PROJECT }}' \
            -var='region=${{ secrets.GCP_REGION }}' \
            -var='zone=${{ secrets.GCP_ZONE }}'

      - name: Terraform Apply
        if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
        run: terraform apply --auto-approve "tfplan"

      - name: Terraform Output
        id: outputs
        if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
        run: |
          JSON=$(terraform output -json)
          IP=$($JSON | jq -r .ip.value)
          INSTANCE_NAME=$($JSON | jq -r .instance_name.value)
          INSTANCE_USER=$($JSON | jq -r .instance_user.value)
          echo "ip=$IP" >> $GITHUB_OUTPUT
          echo "instance_name=$INSTANCE_NAME" >> $GITHUB_OUTPUT
          echo "instance_user=$INSTANCE_USER" >> $GITHUB_OUTPUT
          
      # - name: Copy plugins to VM
      #   if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
      #   run: |
      #     printf | gcloud compute scp --recurse ./setup/ \
      #     ${{ steps.outputs.outputs.instance_user }}@${{ steps.outputs.outputs.instance_name }}:/mnt/minecraft/

      # - name: Run Minecraft server on VM
      #   uses: 'google-github-actions/ssh-compute@v0'
      #   with:
      #     instance_name: 'example-instance'
      #     zone: 'us-central1-a'
      #     ssh_private_key: '${{ secrets.GCP_SSH_PRIVATE_KEY }}'
      #     command: 'echo Hello world'
